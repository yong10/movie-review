{"version":3,"sources":["components/Movie.jsx","components/MovieForm.jsx","components/ReviewInfo.jsx","components/AddReview.jsx","App.js","serviceWorker.js","index.js"],"names":["Movie","props","useState","all","setAll","useEffect","axios","get","then","res","console","log","data","catch","err","className","map","movie","key","_id","title","rating","to","MovieForm","setTitle","name","setName","setRating","review","setReview","errors","setErrors","onSubmit","e","preventDefault","newMovie","post","navigate","type","onChange","target","value","properties","message","ReviewInfo","poster","setPoster","reviews","onClick","delete","AddReview","newReview","put","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8175d584.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\n\r\nconst Movie = props => {\r\n    \r\n    const [all, setAll] = useState([]);\r\n    \r\n    const getMovies = () => {\r\n        axios.get(\"http://localhost:8000/api/movies\")\r\n            .then(res => {\r\n                console.log(res);\r\n                setAll(res.data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    useEffect( () => {\r\n        getMovies();\r\n    }, []);\r\n    \r\n    return (\r\n        <div className=\"mt-5\">\r\n            \r\n            \r\n                <table className=\"table table-striped\">\r\n                    <tr className=\"thead-dark\">\r\n                        <th>Movie Title</th>\r\n                        <th>Avg. Rating</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    {all.map(movie =>\r\n                        <tr key={movie._id}>\r\n                            <td>{movie.title}</td>\r\n                            <td>{movie.rating}</td>\r\n                            <td>\r\n                                <Link className=\"btn btn-outline-primary\" to={`/movies/${movie._id}`}>Read Reviews</Link>\r\n                                <Link className=\"btn btn-outline-warning\" to={`/movies/${movie._id}/review`}>Add Review</Link>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst MovieForm = props => {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [rating, setRating] = useState();\r\n    const [review, setReview] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const create = e => {\r\n        e.preventDefault();\r\n        const newMovie = {title, name, rating, review};\r\n        axios.post(\"http://localhost:8000/api/movies\", newMovie)\r\n            .then(res => {\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                    console.log(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\")\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <form className=\"col-sm-6 mt-5\" onSubmit={create}>\r\n                <div className=\"form-group\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setTitle(e.target.value)} />\r\n                    {errors.title ? <p className=\"text-danger\">{errors.title.properties.message}</p>: \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Your Name</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)} />\r\n                    {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Rating</label>\r\n                    <input type=\"number\" className=\"form-control\" onChange={e => setRating(e.target.value)} />\r\n                    {errors.rating ? <p className=\"text-danger\">{errors.rating.properties.message}</p>: \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Review</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setReview(e.target.value)} />\r\n                    {errors.review ? <p className=\"text-danger\">{errors.review.properties.message}</p>: \"\"}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-outline-primary\" value=\"Add Movie\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieForm;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\n\r\nconst ReviewInfo = props => {\r\n    \r\n    const [all, setAll] = useState([]);\r\n    const [poster, setPoster] = useState([]);\r\n\r\n    console.log(\"the props are loggin below\")\r\n    console.log(props)\r\n    const getMovies = () => {\r\n        axios.get(`http://localhost:8000/api/movies/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setAll(res.data.reviews);\r\n                console.log(res.data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    const getMaker = () => {\r\n        axios.get(`http://localhost:8000/api/movies/${props._id}`)\r\n            .then(res => {\r\n                setPoster(res.data);\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    useEffect( () => {\r\n        getMovies();\r\n        getMaker();\r\n    }, []);\r\n\r\n    const remove = () => {\r\n        axios.delete(`http://localhost:8000/api/movies/${props._id}/delete`)\r\n            .then(res => {\r\n                console.log(res);\r\n                navigate(\"/\")\r\n            }).catch(err => console.log(err));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h3>Movie Title: {poster.title}</h3>\r\n            <h5>Poster's Name: {poster.name}</h5>\r\n            <h5>Poster's Rating: {poster.rating}</h5>\r\n            <h5>Poster's Review: {poster.review}</h5>\r\n            <button className=\"btn btn-outline-danger my-3\" onClick={remove}>Remove Movie</button>\r\n            <table className=\"table table-striped\">\r\n                <tr className=\"thead-dark\">\r\n                    <th>Name</th>\r\n                    <th>Rating</th>\r\n                    <th>Review</th>\r\n                </tr>\r\n                {all.map(review=>\r\n                    <tr>\r\n                        <td>{review.name}</td>\r\n                        <td>{review.rating}</td>\r\n                        <td>{review.review}</td>\r\n                    </tr>\r\n                )}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReviewInfo;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst AddReview = props => {\r\n    const [name, setName] = useState(\"\");\r\n    const [rating, setRating] = useState();\r\n    const [review, setReview] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const submitReview = (e, _id) => {\r\n        e.preventDefault();\r\n        console.log(props);\r\n        const newReview = {name, rating, review};\r\n        console.log('logging new review below')\r\n        console.log(newReview)\r\n        axios.put(`http://localhost:8000/api/movies/${props._id}/add_review`, newReview)\r\n            .then(res => {\r\n                console.log(\"logging res below\")\r\n                console.log(res);\r\n                if(res.data.errors){\r\n                    setErrors(res.data.errors.reviews.errors);\r\n                } else {\r\n                    navigate(`/movies/${props._id}`)\r\n                    console.log('in the else')\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col-sm-6 mt-5\" onSubmit={submitReview}>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)} />\r\n                    {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Rating</label>\r\n                    <input type=\"number\" className=\"form-control\" onChange={e => setRating(e.target.value)} />\r\n                    {errors.rating ? <p className=\"text-danger\">{errors.rating.properties.message}</p>: \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Review</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setReview(e.target.value)} />\r\n                    {errors.review ? <p className=\"text-danger\">{errors.review.properties.message}</p>: \"\"}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-outline-primary\" value=\"Add Review\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddReview;","import React from 'react';\nimport Movies from './components/Movie';\nimport { Link, Router } from '@reach/router';\nimport MovieForm from './components/MovieForm';\nimport Movie from './components/Movie';\nimport ReviewInfo from './components/ReviewInfo';\nimport AddReview from './components/AddReview';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Link className=\"btn btn-info mt-3\" to=\"/\">Movie(s) List</Link>\n      <Link className=\"btn btn-info mt-3\" to=\"/movies/new\">Add a New Movie</Link>\n        <Router>\n          <Movie path=\"/\" />\n          <MovieForm path=\"/movies/new\" />\n          <ReviewInfo path=\"/movies/:_id\" />\n          <AddReview path=\"/movies/:_id/review\" />\n          </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}